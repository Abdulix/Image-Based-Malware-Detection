import React, { useState } from "react";
import people from "../../assets/people.png";
import ai from "../../assets/ai.png";
import "./header.css";
import AnalysisResult from "../results/AnalysisResult";
import axios from "axios";

const Header = () => {
  const [showFileUpload, setShowFileUpload] = useState(false);
  const [selectedFile, setSelectedFile] = useState(null);
  const [analysisResult, setAnalysisResult] = useState(false);
  const [prediction, setPrediction] = useState(false);

  const handleGetStartedClick = () => {
    setShowFileUpload(true);
  };

  const handleCloseClick = () => {
    setSelectedFile(null);
    setShowFileUpload(false);
    setAnalysisResult(null);
  };

  const handleFileChange = (event) => {
    const file = event.target.files[0];
    setSelectedFile(file);
  };

const handleAnalyzeClick = () => {
  if (selectedFile) {
    const formData = new FormData();
    formData.append("file", selectedFile);

    axios
      .post("http://127.0.0.1:8000/process_file/", formData)
      .then((response) => {
        console.log(response.data.predictions);
        console.log("here")
        // Check if 'predictions' is defined in the response
        const predictions = response.data.predictions;
        
    
          // Assuming predictions is an array and you want to check if malware is detected
          
          setAnalysisResult(true);
          setPrediction(predictions)

      })
      .catch((error) => {
        console.error("Error:", error);
      });
  }
};
  return (
    <div className="header section__padding" id="home">
      <div className="header-content">
        <h1 className="gradient__text">Let's do some Malware Detection</h1>
        <p>
          Empower your digital world with our robust malware detection.
          Unleashing advanced algorithms, we secure your online space, ensuring
          a fortress against digital threats. Your safety, our mission.
        </p>

        <div className="header-content__input">
          <button type="button" onClick={handleGetStartedClick}>
            Get Started
          </button>
        </div>

        
      </div>

      {showFileUpload && (
        <div
          className={`file-upload-container ${showFileUpload ? "active" : ""}`}
        >
          <div className="background-overlay"></div>
          <div className="file-upload-box">
            <div
              className="close-icon"
              onClick={handleCloseClick}
              style={{ color: "2px solid #000" }}
            >
              <span
                style={{
                  fontWeight: "900",
                  fontSize: "24px",
                  color: "#1c1c1c",
                }}
              >
                &times;
              </span>
            </div>
            <p className="instantanalyze">Drag and Drop for instant Analyze</p>

            {/* File input for selecting a file */}
            <label>
              <input type="file" onChange={handleFileChange} />
            </label>

            {/* Display the selected file name or "No file chosen" */}
            <div className="file-info">
              {selectedFile ? (
                <div style={{ color: "#fff" }}>
                  Selected File: {selectedFile.name}
                </div>
              ) : (
                <div style={{ color: "#FF0000" }}>No file chosen</div>
              )}
            </div>

            {/* Analyze button at the bottom right corner */}
            <button
              type="button"
              onClick={handleAnalyzeClick}
              className="analyze-button"
            >
              Analyze
            </button>
          </div>
        </div>
      )}

      <div className="header-image">
        <img src={ai} alt="AI Image" />
      </div>

      {/* Include the AnalysisResult component */}
      {analysisResult && (
        <AnalysisResult
          result={prediction}
          onClose={() => setAnalysisResult(false)}
        />
      )}
    </div>
  );
};

export default Header;
